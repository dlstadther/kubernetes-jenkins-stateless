apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkins
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get","list","watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-configuration-as-code
data:
  configuration-as-code.yml: |
    jenkins:
      systemMessage: "Stateless Jenkins w/ JCasC!"
      labelString: "jenkins-master"
      mode: EXCLUSIVE
      numExecutors: 3
    tool:
      git:
        installations:
        - home: "git"
          name: "Default"
    jobs:
      - script: >
          pipelineJob('CasC - DSL Scripted') {
            definition {
              cps {
                script('''
          properties([parameters([booleanParam(defaultValue: false, description: '', name: 'isRelease')])])

          node("jenkins-master") {
            stage("checkout") {
              echo "Checking out..."
            }

            stage("build") {
              echo "Building..."
              sleep 2
            }

            stage("release") {
              if(!params?.isRelease) {
                echo "Release build is not enabled"
              } else {
                echo "Release build enabled. Running release."
                sleep 15
              }
            }
          }
                ''')
                sandbox()
              }
            }
          }

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  template:
    metadata:
      name: jenkins
      labels:
        name: jenkins
    spec:
      serviceAccountName: jenkins
      containers:
        - name: jenkins
          image: ds/jenkins-v3:2.146
          env:
            - name: JAVA_OPTS
              value: -Djenkins.install.runSetupWizard=false -Dhudson.slaves.NodeProvisioner.initialDelay=0
            - name: CASC_JENKINS_CONFIG
              value: /var/jenkins_config/configuration-as-code.yml
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: jenkins-configuration-as-code
              mountPath: /var/jenkins_config
          # livenessProbe:
          #   httpGet:
          #     path: /login
          #     port: 8080
          #   initialDelaySeconds: 60
          #   timeoutSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /login
          #     port: 8080
          #   initialDelaySeconds: 60
          #   timeoutSeconds: 5
      volumes:
        - name: jenkins-home
          emptyDir: {}
        - name: jenkins-configuration-as-code
          configMap:
            name: jenkins-configuration-as-code

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30123
      protocol: TCP
  selector:
    name: jenkins
